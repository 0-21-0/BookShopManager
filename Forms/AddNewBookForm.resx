<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGWSURBVFhH7ZexLgRRFIZHIwqW7W0jEY1GRKfQC0EUkq00vAGJQjQqlSCyYUUiGloq4QUsnsCz
        jO9M/klG3MSd3dmG8yVfdv5795w92Z1J9iaO4/wn0jRt4DTO9uAEDqllNdCwiW/4iNfY6sF7/MBTrOsj
        uocmZ3iFY1qqBPptoA3a0FJ5KN7EC8XKofc8viiWh+JXrCn2Bfq3bVDFeCgaxwfFDPIi7uOkrlcLfmK+
        Z6/F992h7Vu+UbsM8goeKMZD0Qx++3nJ22g3uj2Ndr1V0Mj38gfCrm2vg4bljtplkOfwXDEeNWspZpD7
        MeCPz4kiVEj2AaMJFZJ9wGhChWQfMJpQIdkHjCZUSPYBowkVkn3AaEKFZB8wGoqm8FYxg2x/Pncx/yO6
        XNCGyPfstfg+O2jZvuW22mWQF/BIMR6KBvEdB7TUF+i/h03FclB4guuKlUPvYbQvYURL5aCwrgblDzW/
        QM8aPuGalrqDBnZ4esZLXEK7qXvRjpo7aGfi6n4dmtnNfIj5E9qtx2jn7VG1dhznD5MkXwck6kO8KrQc
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="Button_Close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAH/SURBVFhH3ZnNSwMxEMWXetODldJaxUrx438S1D/S4lmvioofiCAKIqh4UEQvXgr1PZ2U3XU2
        TXZpGR34gcy8SZ5J3axpko5BktTANuiBe/AJBmOGc3CuHbAFamInGyisgSOgDTJJDsGK2PoJJNbBqwgs
        8AJWnbkpcCYFS5yAGg1uppLW2KDB3VzSEj0afM4lLfFIg/1c0hJ9GtQKZvi3Bt/ARy7ng1r2aDUvZQwe
        gDpYAFeS80ENtexhr6YpJNbgHpj+fsIj8HMTnEtN4xjMiZz6GbAvtSBiDPL4qctcw0CuDbSVZK4tsmEg
        x5UMPlZjDL6DlsyTCeTzJlVzDORbIPjzG2OQXINFmSsTyLvtzmxrOtgLOIY2tkqsQXIBmjJnJpDnShat
        HH8B9mpjFlLGIClcSS2olR5tLC9lDZIgk9SIVhtjJFUMEq9J1kSj9QZR1eAtWBI/vwK1jmi03iCqGLwE
        8+KlMKgRrTbGSMoaDDLnglrp0cbyUsYgt6wjc2cCed9jptR2xxosXDnku+AO3AD1c8leELWSMQZ51PlW
        LvSoWwZjOerMvyyQU9CQudjrtlXTEta6Iqe+ATiGplWJNUj40jkLTL6wOky/8k+UP2HQ/D/uT7mkJR5o
        0PzlkfnrN9sXmPKEt3sF7AIJu5foLlBIfw0xyb9uzqV8DZEkXw1U5N2I9ImDAAAAAElFTkSuQmCC
</value>
  </data>
</root>